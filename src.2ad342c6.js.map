{"version":3,"sources":["src/loginLocal.js","src/nowtime.js","src/now_local.js","src/timer.js","src/background_settings.js","src/todolist.js","src/bookmark.js","src/quotes.js","src/index.js"],"names":["userInfoContainer","document","querySelector","loginUserBtn","loginUserFormWrapper","inputUserForm","inputUserName","inputUserNameSubmitBtn","loginUserInfo","getElementById","signOutBtn","LOCAL_STORAGE_USER_KEY","openLoginUserInfoOrLoginFormWrapper","savedUserName","localStorage","getItem","greetings","_greetings","innerText","classList","remove","add","openUserInfoContainer","event","toggle","_userLoginBtnInnerText","handleLoginUserInfo","preventDefault","_userName","value","length","alert","setItem","handleSignOut","removeItem","addEventListener","dayOfWeek","getNowDateTimeInfo","now","Date","nowYear","getFullYear","nowMonth","getMonth","nowDay","getDate","nowDayOfWeek","getDay","hour","Math","ceil","getHours","minute","getMinutes","second","getSeconds","AmPm","_hour","todayDateInfo","todayTimeInfo","_nowMonth","toString","padStart","_nowDay","_minute","_second","setInterval","API_KEY","onGeoSuccess","position","console","log","lat","coords","latitude","lon","longitude","url","fetch","then","res","json","data","localInfo","tempInfo","name","weather","main","onGeoError","navigator","geolocation","getCurrentPosition","cron","timerBtn","timerContainer","startTimerBtn","stopTimerBtn","pauseTimerBtn","jsTimer","HOUR","MINUTE","TIME","openTimerContainer","updateTimer","hours","floor","minutes","seconds","_diffHour","_diffMin","_diffSec","startTimer","stopTimer","pauseTimer","clearInterval","init","setBackgroundBtn","imgs","chosenImg","random","bgImg","createElement","body","src","style","backgroundImage","backgroundSize","setBackgroundContainer","openSetBackground","todoListBtn","todoListContainer","todoListForm","todoInput","todoList","TODO_KEY","toDos","openTodoList","saveTodos","JSON","stringify","deleteTodo","li","target","parentElement","filter","toDo","parseInt","id","paintTodo","newTodo","span","cancleBtn","appendChild","text","handleTodoListSubmit","newTodoObj","push","savedTodos","parsedTodos","parse","forEach","setBookmarkBtn","bookmarkListContainer","openSetBookmark","quoteSentence","quoteAuthor","QUOTE_ROTATION_TIME","quotes","quote","author","randomQutoes","_quote"],"mappings":"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","file":"src.2ad342c6.js","sourceRoot":"..","sourcesContent":["const userInfoContainer = document.querySelector(\"#user-info-container\");\nconst loginUserBtn = document.querySelector(\"#login-user\");\n\nconst loginUserFormWrapper = userInfoContainer.querySelector(\n  \"#login-user-form-wrapper\"\n);\nconst inputUserForm = userInfoContainer.querySelector(\"#login-user-form\");\nconst inputUserName = inputUserForm.querySelector(\"#input-user-name\");\nconst inputUserNameSubmitBtn = inputUserForm.querySelector(\n  \"#input-user-name-submit-btn\"\n);\n\nconst loginUserInfo = document.getElementById(\"login-user-info\");\nconst signOutBtn = document.getElementById(\"sign-out-btn\");\n\nconst LOCAL_STORAGE_USER_KEY = \"login-user\";\n\nexport const openLoginUserInfoOrLoginFormWrapper = () => {\n  const savedUserName = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\n  let greetings = document.getElementById(\"greetings\");\n  let _greetings = greetings.innerText;\n\n  if (savedUserName === null) {\n    // 로그아웃된 상태\n    loginUserBtn.classList.remove(\"hidden\"); //로그인버튼 드러내기\n    signOutBtn.classList.add(\"hidden\"); //로그아웃버튼 숨기기\n    loginUserInfo.classList.add(\"hidden\");\n    loginUserFormWrapper.classList.remove(\"hidden\");\n  } else {\n    // 로그인된 상태 - 로컬스토리지에 등록된 상태\n    loginUserBtn.classList.add(\"hidden\"); //로그인버튼 숨기기\n    signOutBtn.classList.remove(\"hidden\"); //로그아웃버튼 드러내기\n    loginUserInfo.classList.remove(\"hidden\");\n    loginUserFormWrapper.classList.add(\"hidden\");\n    greetings.innerText = `${savedUserName}님, ${_greetings}`;\n  }\n};\n\n// 로그인 컨테이너 열기\nfunction openUserInfoContainer(event) {\n  userInfoContainer.classList.toggle(\"hidden\");\n  let _userLoginBtnInnerText = loginUserBtn.innerText;\n  if (_userLoginBtnInnerText === \"로그인 하기\") {\n    loginUserBtn.innerText = \"로그인 취소하기\";\n  } else {\n    loginUserBtn.innerText = \"로그인 하기\";\n  }\n  openLoginUserInfoOrLoginFormWrapper();\n}\n\n// 유저정보를 로컬스토리지에 등록합니다.\nfunction handleLoginUserInfo(event) {\n  event.preventDefault();\n  let _userName = inputUserName.value;\n  if (_userName.length < 2 || _userName.length > 20) {\n    alert(\"이름 글자수는 최소 2자, 최대 20자 입니다.\");\n    return;\n  }\n\n  localStorage.setItem(LOCAL_STORAGE_USER_KEY, _userName);\n  openLoginUserInfoOrLoginFormWrapper();\n}\n\n// 로그아웃 합니다.\nfunction handleSignOut(event) {\n  localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n  openUserInfoContainer();\n}\n\nloginUserBtn.addEventListener(\"click\", openUserInfoContainer);\ninputUserNameSubmitBtn.addEventListener(\"click\", handleLoginUserInfo);\nsignOutBtn.addEventListener(\"click\", handleSignOut);\n","import { openLoginUserInfoOrLoginFormWrapper } from \"./loginLocal.js\";\n\n// const timeContainer = document.querySelector(\"#time-container\");\n\n// 시계\nconst dayOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\nfunction getNowDateTimeInfo() {\n  const now = new Date();\n  const nowYear = now.getFullYear(); // 년도\n  const nowMonth = 1 + now.getMonth(); // 월\n  const nowDay = now.getDate(); // 일\n  const nowDayOfWeek = dayOfWeek[now.getDay()]; // 요일\n\n  const hour = Math.ceil(now.getHours()); // 시\n  const minute = Math.ceil(now.getMinutes()); // 분\n  const second = Math.ceil(now.getSeconds());\n\n  // 시간 문구\n  let greetings = document.querySelector(\"#greetings\");\n  switch (hour) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      greetings.innerText = \"다음날을 위해 충전을 해봐요~\";\n      break;\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 11:\n      greetings.innerText = \"좋은 아침입니다~ 오늘도 힘을 내봐요!\";\n      break;\n    case 12:\n    case 13:\n    case 14:\n      greetings.innerText = \"맛있는 점심시간 잘보내세요~\";\n      break;\n    case 15:\n    case 16:\n      greetings.innerText = \"커피한잔 마시면서 산책을 해보아요~\";\n      break;\n    case 17:\n    case 18:\n    case 19:\n    case 20:\n      greetings.innerText = \"나를 위한 시간을 가져볼까요~?\";\n      break;\n    case 21:\n    case 22:\n    case 23:\n      greetings.innerText = \"오늘 하루도 수고많으셨습니다~\";\n\n      break;\n    default:\n      break;\n  }\n\n  // 로그인되어있는지 확인\n  openLoginUserInfoOrLoginFormWrapper();\n\n  // 오전/오후\n  let AmPm = \"오전\";\n  let _hour = hour;\n  if (hour >= 12) {\n    AmPm = \"오후\";\n    if (hour > 12) {\n      _hour = hour - 12;\n    }\n  }\n  // 오늘날짜정보\n  let todayDateInfo = document.querySelector(\"#today-date-info\");\n\n  // 오늘 시각정보\n  let todayTimeInfo = document.querySelector(\"#today-time-info\");\n\n  let _nowMonth = nowMonth.toString().padStart(2, \"0\");\n  let _nowDay = nowDay.toString().padStart(2, \"0\");\n  let _minute = minute.toString().padStart(2, \"0\");\n  let _second = second.toString().padStart(2, \"0\");\n  _hour = _hour.toString().padStart(2, \"0\");\n\n  todayDateInfo.innerText = `${nowYear}년 ${_nowMonth}월 ${_nowDay}일 (${nowDayOfWeek})`;\n\n  todayTimeInfo.innerText = `${AmPm} ${_hour}시 ${_minute}분 ${_second}초`;\n}\n\n// 1분간격으로 업데이트\ngetNowDateTimeInfo();\nsetInterval(getNowDateTimeInfo, 1000);\n","const API_KEY = \"dd30fd5b3770abea0c586a537a1e68e3\";\n\nfunction onGeoSuccess(position) {\n  console.log(position);\n  const lat = position.coords.latitude;\n  const lon = position.coords.longitude;\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metrics`;\n\n  //javascript가 알아서 url을 호출.\n  fetch(url)\n    .then((res) => res.json())\n    .then((data) => {\n      const localInfo = document.getElementById(\"local-info\");\n      const tempInfo = document.getElementById(\"temp-info\");\n      localInfo.innerText = data.name;\n      tempInfo.innerText = data.weather[0].main;\n    });\n}\n\nfunction onGeoError() {\n  alert(\n    \"지역정보와 날씨정보를 찾을수 없습니다. 브라우저에서 위치권한을 허용해주세요.\"\n  );\n}\n\nnavigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoError);\n","const timerBtn = document.querySelector(\"#timer\");\nconst timerContainer = document.querySelector(\"#timer-container\");\n\nconst startTimerBtn = document.getElementById(\"start-timer-btn\"); //타이머 시작하기\nconst stopTimerBtn = document.getElementById(\"stop-timer-btn\"); // 타이머 정지 버튼\nconst pauseTimerBtn = document.getElementById(\"pause-timer-btn\");\nconst jsTimer = document.getElementById(\"js-timer\"); //\n\nconst HOUR = 60 * 60;\nconst MINUTE = 60;\nlet TIME = 0;\nlet cron;\n\n// 타이머 컨테이너를 엽니다.\nfunction openTimerContainer(event) {\n  timerContainer.classList.toggle(\"hidden\");\n}\n\n// 타이머 실행\nconst updateTimer = () => {\n  const hours = Math.floor(TIME / HOUR);\n  const minutes = Math.floor(TIME / MINUTE);\n  const seconds = TIME % MINUTE;\n\n  let _diffHour = hours.toString().padStart(2, \"0\");\n  let _diffMin = minutes.toString().padStart(2, \"0\");\n  let _diffSec = seconds.toString().padStart(2, \"0\");\n  jsTimer.innerText = `${_diffHour}:${_diffMin}:${_diffSec}`;\n  TIME++;\n};\n\n// 타이머 등록하기 버튼 누를때\nfunction startTimer() {\n  updateTimer();\n  stopTimer();\n  cron = setInterval(updateTimer, 1000);\n}\n\nfunction pauseTimer() {\n  clearInterval(cron);\n}\n\n// 타이머 정지\nfunction stopTimer() {\n  clearInterval(cron);\n  jsTimer.innerText = \"00:00:00\";\n  pauseTimer();\n\n  return (TIME = 0);\n}\n\nfunction init() {\n  timerBtn.addEventListener(\"click\", openTimerContainer); // 타이머컨테이너 열기\n  startTimerBtn.addEventListener(\"click\", startTimer);\n  stopTimerBtn.addEventListener(\"click\", stopTimer);\n  pauseTimerBtn.addEventListener(\"click\", pauseTimer);\n  // createUserTimerSelectOptions();\n}\n\ninit();\n","const setBackgroundBtn = document.querySelector(\"#setting-background\");\n\nconst imgs = [\"0.jpeg\", \"1.jpeg\", \"2.jpeg\", \"3.jpeg\"];\nconst chosenImg = imgs[Math.floor(Math.random() * imgs.length)];\nconst bgImg = document.createElement(\"img\");\n\nconst body = document.querySelector(\"body\");\n\nbgImg.src = `./src/imgs/${chosenImg}`;\n\n// document.body.appendChild(bgImg);\nbody.style.backgroundImage = `url(\"./src/imgs/${chosenImg}\")`;\nbody.style.backgroundSize = \"cover\";\n\nconst setBackgroundContainer = document.querySelector(\n  \"#setting-background-container\"\n);\n\nfunction openSetBackground(event) {\n  setBackgroundContainer.classList.toggle(\"hidden\");\n}\n\nsetBackgroundBtn.addEventListener(\"click\", openSetBackground);\n","const todoListBtn = document.querySelector(\"#todo-list\");\nconst todoListContainer = document.querySelector(\"#todo-list-container\");\nconst todoListForm = document.getElementById(\"todo-list-form\");\n\nconst todoInput = document.getElementById(\"todo-input\");\nconst todoList = document.getElementById(\"todo-lists\");\n\nconst TODO_KEY = \"todos\";\nlet toDos = [];\n\nfunction openTodoList(event) {\n  todoListContainer.classList.toggle(\"hidden\");\n}\n\nfunction saveTodos() {\n  localStorage.setItem(TODO_KEY, JSON.stringify(toDos));\n  console.log(toDos);\n}\n\nfunction deleteTodo(event) {\n  const li = event.target.parentElement;\n  li.remove();\n\n  toDos = toDos.filter((toDo) => {\n    // li.id : string\n    //toDo.id : number\n    return parseInt(li.id) !== toDo.id;\n  });\n\n  saveTodos();\n}\n\nfunction paintTodo(newTodo) {\n  const li = document.createElement(\"li\");\n  li.id = newTodo.id;\n  const span = document.createElement(\"span\");\n  const cancleBtn = document.createElement(\"button\");\n  cancleBtn.innerText = \"❌\";\n  cancleBtn.addEventListener(\"click\", deleteTodo);\n\n  li.appendChild(span);\n  li.appendChild(cancleBtn);\n  span.innerText = newTodo.text;\n  todoList.appendChild(li);\n}\n\nfunction handleTodoListSubmit(event) {\n  event.preventDefault();\n  const newTodo = todoInput.value;\n  if (todoInput.value.length === 0) {\n    alert(\"다시 입력해주세요\");\n    return;\n  }\n  const newTodoObj = {\n    text: newTodo,\n    id: Date.now()\n  };\n\n  todoInput.value = \"\";\n  toDos.push(newTodoObj);\n  saveTodos();\n  paintTodo(newTodoObj);\n}\n\ntodoListBtn.addEventListener(\"click\", openTodoList);\ntodoListForm.addEventListener(\"submit\", handleTodoListSubmit);\n\nconst savedTodos = localStorage.getItem(TODO_KEY);\nif (savedTodos !== null) {\n  const parsedTodos = JSON.parse(savedTodos);\n  toDos = parsedTodos;\n  parsedTodos.forEach(paintTodo);\n}\n","const setBookmarkBtn = document.querySelector(\"#setting-bookmark\");\nconst bookmarkListContainer = document.querySelector(\n  \"#bookmark-list-container\"\n);\n\nfunction openSetBookmark(event) {\n  bookmarkListContainer.classList.toggle(\"hidden\");\n}\n\nsetBookmarkBtn.addEventListener(\"click\", openSetBookmark);\n","const quoteSentence = document.getElementById(\"quote-sentence\");\nconst quoteAuthor = document.getElementById(\"quote-author\");\nconst QUOTE_ROTATION_TIME = 10 * 60 * 1000; // quote가 바뀌는 주기 : 10분\nconst quotes = [\n  {\n    quote: \"The way to get started is to quit talking and begin doing.\",\n    author: \"Walt Disney\"\n  },\n  {\n    quote: \"Life is what happens when you're busy making other plans.\",\n    author: \"John Lennon\"\n  },\n  {\n    quote:\n      \"The world is a book and those who do not travel read only one page.\",\n    author: \"Saint Augustine\"\n  },\n  {\n    quote: \"Life is either a daring adventure or nothing at all.\",\n    author: \"Helen Keller\"\n  },\n  {\n    quote: \"To Travel is to Live\",\n    author: \"Hans Christian Andersen\"\n  },\n  {\n    quote: \"Only a life lived for others is a life worthwhile.\",\n    author: \"Albert Einstein\"\n  },\n  {\n    quote: \"You only live once, but if you do it right, once is enough.\",\n    author: \"Mae West\"\n  },\n  {\n    quote: \"Never go on trips with anyone you do ntot love.\",\n    author: \"Hemmingway\"\n  },\n  {\n    quote: \"We wander for distraction, but we travel for fulfilment.\",\n    author: \"Hilaire Belloc\"\n  },\n  {\n    quote: \"Travel expands the mind and fills the gap.\",\n    author: \"Sheda Savage\"\n  }\n];\n\nfunction randomQutoes() {\n  const _quote = quotes[Math.floor(Math.random() * quotes.length)];\n  quoteSentence.innerText = _quote.quote;\n  quoteAuthor.innerText = _quote.author;\n}\n\nrandomQutoes();\nsetInterval(randomQutoes, QUOTE_ROTATION_TIME);\n","import \"./styles.css\";\n\nimport \"./loginLocal.js\";\nimport \"./nowtime.js\";\n\nimport \"./now_local.js\";\nimport \"./timer.js\";\nimport \"./background_settings.js\";\nimport \"./todolist.js\";\nimport \"./bookmark.js\";\nimport \"./quotes.js\";\n"]}